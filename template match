import cv2
import numpy as np
from matplotlib import pyplot as plt
import tkinter.filedialog


def select_area(image, instructions="Select Area",blur=False):
    """ Create temporary small version then rescale to input image"""
    
    height, width = image.shape[:2]
    temp = image.copy()
    if blur:
        temp = cv2.GaussianBlur(temp,(5,5),0) 
    scale = height/705
    width = int(width/scale)
    height = 705
    
    temp = cv2.resize(temp, (width,height)) 
    cv2.putText(temp,instructions, (50,75),cv2.FONT_HERSHEY_TRIPLEX, 1,(255, 255, 255),10,lineType=cv2.LINE_AA) 
    cv2.putText(temp,instructions, (50,75),cv2.FONT_HERSHEY_TRIPLEX, 1,(1, 1, 1),2,lineType=cv2.LINE_AA) 
    cv2.putText(temp,instructions, (50,75),cv2.FONT_HERSHEY_TRIPLEX, 1,(200, 10, 145),1,lineType=cv2.LINE_AA) 
    
    x,y,w,h = cv2.selectROI(instructions, temp, fromCenter=False,showCrosshair=True)
    x= int((x-3)*scale) 
    y= int((y-3)*scale) 
    w= int((w+6)*scale) 
    h= int((h+6)*scale)
    cv2.destroyAllWindows()
    return [y,x,h,w]

filename = tkinter.filedialog.askopenfilename()
img = cv2.imread(filename,0)

yxhw = select_area(img[500:2200,1000:3500],"Select one EMPTY Bubble")
template = img[yxhw[0]:yxhw[0]+yxhw[2],yxhw[1]:yxhw[1]+yxhw[3]]

h, w = template.shape

res = cv2.matchTemplate(img,template,cv2.TM_CCOEFF_NORMED)
threshold = 0.8
loc = np.where( res >= threshold)
for pt in zip(*loc[::-1]):
    cv2.rectangle(img, pt, (pt[0] + w, pt[1] + h), (0,0,255), 2)

cv2.imshow('res.png',img)